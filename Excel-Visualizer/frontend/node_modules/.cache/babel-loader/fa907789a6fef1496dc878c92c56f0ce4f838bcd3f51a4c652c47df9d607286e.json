{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paras\\\\OneDrive\\\\Desktop\\\\Excel-Sheet-Analyzer\\\\Excel-Visualizer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport AuthPage from './components/Auth/AuthPage';\nimport ChartRenderer, { generateSampleChartData } from './components/Charts/ChartRenderer';\nimport { filesAPI, chartsAPI } from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    logout,\n    loading\n  } = useAuth();\n  const [activeTab, setActiveTab] = useState('upload');\n  console.log('App: Current auth state:', {\n    isAuthenticated,\n    user,\n    loading\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Excel Visualizer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Excel Visualizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Transform your Excel data into beautiful charts and visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"welcome-text\",\n            children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.firstName) || (user === null || user === void 0 ? void 0 : user.username), \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-btn\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'upload' ? 'active' : ''}`,\n        onClick: () => setActiveTab('upload'),\n        children: \"Upload Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'charts' ? 'active' : ''}`,\n        onClick: () => setActiveTab('charts'),\n        children: \"My Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'gallery' ? 'active' : ''}`,\n        onClick: () => setActiveTab('gallery'),\n        children: \"Chart Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [activeTab === 'upload' && /*#__PURE__*/_jsxDEV(FileUploadSection, {\n        setActiveTab: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }, this), activeTab === 'charts' && /*#__PURE__*/_jsxDEV(MyChartsSection, {\n        setActiveTab: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 36\n      }, this), activeTab === 'gallery' && /*#__PURE__*/_jsxDEV(ChartGallerySection, {\n        setActiveTab: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"xnTpHJlpBE1ChwCFqmvBBwtAaGs=\", false, function () {\n  return [useAuth];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nfunction FileUploadSection({\n  setActiveTab\n}) {\n  _s2();\n  var _uploadResult$file, _uploadResult$file2;\n  const [dragActive, setDragActive] = useState(false);\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadResult, setUploadResult] = useState(null);\n  const [error, setError] = useState('');\n  const handleDragOver = e => {\n    e.preventDefault();\n    setDragActive(true);\n  };\n  const handleDragLeave = () => {\n    setDragActive(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragActive(false);\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile && (droppedFile.name.endsWith('.xlsx') || droppedFile.name.endsWith('.xls'))) {\n      setFile(droppedFile);\n      setError('');\n    } else {\n      setError('Please select a valid Excel file (.xlsx or .xls)');\n    }\n  };\n  const handleFileInput = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setError('');\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setUploading(true);\n    setUploadProgress(0);\n    setError('');\n    try {\n      const result = await filesAPI.uploadFile(file, progress => {\n        setUploadProgress(progress);\n      });\n      setUploadResult(result);\n      setFile(null);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Upload failed. Please try again.');\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), uploadResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2705 Upload Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File: \", (_uploadResult$file = uploadResult.file) === null || _uploadResult$file === void 0 ? void 0 : _uploadResult$file.originalName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rows processed: \", ((_uploadResult$file2 = uploadResult.file) === null || _uploadResult$file2 === void 0 ? void 0 : _uploadResult$file2.rowCount) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `upload-area ${dragActive ? 'drag-active' : ''} ${file ? 'file-selected' : ''} ${uploading ? 'uploading' : ''}`,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      children: !file && !uploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop your Excel file here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-input-label\",\n          children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".xlsx,.xls\",\n            onChange: handleFileInput,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-info\",\n          children: \"Supports .xlsx and .xls files (max 10MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-icon\",\n          children: \"\\u2B06\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Uploading... \", uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please wait while we process your file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon\",\n          children: \"\\uD83D\\uDCC4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", (file.size / 1024 / 1024).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleUpload,\n              disabled: uploading,\n              children: uploading ? 'Processing...' : 'Upload & Process'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setFile(null),\n              disabled: uploading,\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadSection, \"5zgNXtFciVnSTr34qzq1KhtwZ7A=\");\n_c3 = FileUploadSection;\nfunction MyChartsSection() {\n  _s3();\n  const [charts, setCharts] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [chartType, setChartType] = useState('bar');\n  const [chartTitle, setChartTitle] = useState('');\n  const [showCreateChart, setShowCreateChart] = useState(false);\n  useEffect(() => {\n    loadChartsAndFiles();\n  }, []);\n  const loadChartsAndFiles = async () => {\n    try {\n      setLoading(true);\n      const [chartsData, filesData] = await Promise.all([chartsAPI.getCharts(), filesAPI.getFiles()]);\n      setCharts(chartsData);\n      setFiles(filesData);\n    } catch (error) {\n      console.error('Failed to load data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateChart = async () => {\n    if (!selectedFile || !chartTitle) return;\n    try {\n      const chartData = {\n        title: chartTitle,\n        type: chartType,\n        fileId: selectedFile._id,\n        config: {\n          // Chart configuration based on file data\n        }\n      };\n      const newChart = await chartsAPI.createChart(chartData);\n      setCharts([newChart, ...charts]);\n      setShowCreateChart(false);\n      setSelectedFile(null);\n      setChartTitle('');\n    } catch (error) {\n      console.error('Failed to create chart:', error);\n    }\n  };\n  const handleDeleteChart = async chartId => {\n    if (window.confirm('Are you sure you want to delete this chart?')) {\n      try {\n        await chartsAPI.deleteChart(chartId);\n        setCharts(charts.filter(chart => chart._id !== chartId));\n      } catch (error) {\n        console.error('Failed to delete chart:', error);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: \"Loading your charts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => setShowCreateChart(true),\n        disabled: files.length === 0,\n        children: \"Create New Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), showCreateChart && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-chart-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Chart Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: chartTitle,\n          onChange: e => setChartTitle(e.target.value),\n          placeholder: \"Enter chart title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile._id) || '',\n          onChange: e => {\n            const file = files.find(f => f._id === e.target.value);\n            setSelectedFile(file);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose a file...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), files.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: file._id,\n            children: [file.originalName, \" (\", file.rowCount, \" rows)\"]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Chart Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: chartType,\n          onChange: e => setChartType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bar\",\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"line\",\n            children: \"Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pie\",\n            children: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleCreateChart,\n          children: \"Create Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setShowCreateChart(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [charts.map(chart => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-preview\",\n          children: /*#__PURE__*/_jsxDEV(ChartRenderer, {\n            chartData: generateSampleChartData(chart.type),\n            chartType: chart.type,\n            title: chart.title,\n            width: 280,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: chart.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [chart.type, \" Chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chart-date\",\n            children: [\"Created: \", new Date(chart.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small btn-danger\",\n              onClick: () => handleDeleteChart(chart._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, chart._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)), charts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No charts created yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload an Excel file first to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click \\\"Create New Chart\\\" to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s3(MyChartsSection, \"jT8mOXwNqjBLcOUDycCMnbHe/eA=\");\n_c4 = MyChartsSection;\nfunction ChartGallerySection({\n  setActiveTab\n}) {\n  _s4();\n  const [selectedChart, setSelectedChart] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showFileSelect, setShowFileSelect] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    loadFiles();\n  }, []);\n  const loadFiles = async () => {\n    try {\n      setLoading(true);\n      const filesData = await filesAPI.getFiles();\n      setFiles(filesData);\n    } catch (error) {\n      console.error('Failed to load files:', error);\n      setError('Failed to load your files. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const chartTypes = [{\n    id: 'bar',\n    type: 'Bar Chart',\n    icon: '📊',\n    description: 'Perfect for comparing categories'\n  }, {\n    id: 'line',\n    type: 'Line Chart',\n    icon: '📈',\n    description: 'Great for showing trends over time'\n  }, {\n    id: 'pie',\n    type: 'Pie Chart',\n    icon: '🥧',\n    description: 'Ideal for showing parts of a whole'\n  }, {\n    id: '3d-bar',\n    type: '3D Bar Chart',\n    icon: '📊',\n    description: '3D visualization for impact'\n  }, {\n    id: 'scatter',\n    type: 'Scatter Plot',\n    icon: '⚫',\n    description: 'Shows relationships between variables'\n  }, {\n    id: 'area',\n    type: 'Area Chart',\n    icon: '🏔️',\n    description: 'Displays cumulative data'\n  }];\n  const handleChartSelect = chart => {\n    setSelectedChart(chart);\n    if (files.length === 0) {\n      setError('Please upload an Excel file first to create charts.');\n    } else {\n      setShowFileSelect(true);\n    }\n  };\n  const handleFileSelect = async file => {\n    try {\n      setLoading(true);\n      setSelectedFile(file);\n\n      // Create a new chart with the selected type and file\n      const chartData = {\n        title: `New ${selectedChart.type}`,\n        type: selectedChart.id,\n        fileId: file._id,\n        config: {\n          // Default configuration based on chart type\n          type: selectedChart.id\n          // Add more default config based on chart type\n        }\n      };\n      const newChart = await chartsAPI.createChart(chartData);\n\n      // Redirect to My Charts section or show the new chart\n      setShowFileSelect(false);\n      setSelectedChart(null);\n      setActiveTab('charts'); // This assumes setActiveTab is passed as a prop\n    } catch (error) {\n      console.error('Failed to create chart:', error);\n      setError('Failed to create chart. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chart Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Choose from various chart types for your data visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        marginBottom: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }, this), showFileSelect ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Select a File for Your \", selectedChart === null || selectedChart === void 0 ? void 0 : selectedChart.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-grid\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: \"\\uD83D\\uDCC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: file.originalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [file.rowCount, \" rows\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => handleFileSelect(file),\n            children: \"Use This File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 19\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No files available. Please upload an Excel file first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setActiveTab('upload'),\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => {\n          setShowFileSelect(false);\n          setSelectedChart(null);\n        },\n        children: \"Back to Chart Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-grid\",\n      children: chartTypes.map(chart => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-icon\",\n          children: chart.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: chart.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: chart.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: () => handleChartSelect(chart),\n          children: \"Try This Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 15\n        }, this)]\n      }, chart.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n}\n_s4(ChartGallerySection, \"WqHECSzI+GB0lRClg7R0zf8TVRY=\");\n_c5 = ChartGallerySection;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"FileUploadSection\");\n$RefreshReg$(_c4, \"MyChartsSection\");\n$RefreshReg$(_c5, \"ChartGallerySection\");","map":{"version":3,"names":["React","useState","useEffect","AuthProvider","useAuth","AuthPage","ChartRenderer","generateSampleChartData","filesAPI","chartsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContent","_s","isAuthenticated","user","logout","loading","activeTab","setActiveTab","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","username","onClick","FileUploadSection","MyChartsSection","ChartGallerySection","_c","App","_c2","_s2","_uploadResult$file","_uploadResult$file2","dragActive","setDragActive","file","setFile","uploading","setUploading","uploadProgress","setUploadProgress","uploadResult","setUploadResult","error","setError","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFile","dataTransfer","files","name","endsWith","handleFileInput","selectedFile","target","handleUpload","result","uploadFile","progress","_error$response","_error$response$data","response","data","message","originalName","rowCount","onDragOver","onDragLeave","onDrop","type","accept","onChange","style","display","width","size","toFixed","disabled","_c3","_s3","charts","setCharts","setFiles","setLoading","setSelectedFile","chartType","setChartType","chartTitle","setChartTitle","showCreateChart","setShowCreateChart","loadChartsAndFiles","chartsData","filesData","Promise","all","getCharts","getFiles","handleCreateChart","chartData","title","fileId","_id","config","newChart","createChart","handleDeleteChart","chartId","window","confirm","deleteChart","filter","chart","length","value","placeholder","find","f","map","height","Date","createdAt","toLocaleDateString","_c4","_s4","selectedChart","setSelectedChart","showFileSelect","setShowFileSelect","loadFiles","chartTypes","id","icon","description","handleChartSelect","handleFileSelect","marginBottom","_c5","$RefreshReg$"],"sources":["C:/Users/paras/OneDrive/Desktop/Excel-Sheet-Analyzer/Excel-Visualizer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport AuthPage from './components/Auth/AuthPage';\r\nimport ChartRenderer, { generateSampleChartData } from './components/Charts/ChartRenderer';\r\nimport { filesAPI, chartsAPI } from './services/api';\r\n\r\nfunction AppContent() {\r\n  const { isAuthenticated, user, logout, loading } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('upload');\r\n\r\n  console.log('App: Current auth state:', { isAuthenticated, user, loading });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading Excel Visualizer...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <AuthPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"app-header\">\r\n        <div className=\"header-content\">\r\n          <div>\r\n            <h1>Excel Visualizer</h1>\r\n            <p>Transform your Excel data into beautiful charts and visualizations</p>\r\n          </div>\r\n          <div className=\"user-menu\">\r\n            <span className=\"welcome-text\">Welcome, {user?.firstName || user?.username}!</span>\r\n            <button className=\"logout-btn\" onClick={logout}>Logout</button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <nav className=\"tab-navigation\">\r\n        <button \r\n          className={`tab ${activeTab === 'upload' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('upload')}\r\n        >\r\n          Upload Excel\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'charts' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('charts')}\r\n        >\r\n          My Charts\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'gallery' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('gallery')}\r\n        >\r\n          Chart Gallery\r\n        </button>\r\n      </nav>\r\n\r\n      <main className=\"app-content\">\r\n        {activeTab === 'upload' && <FileUploadSection setActiveTab={setActiveTab} />}\r\n        {activeTab === 'charts' && <MyChartsSection setActiveTab={setActiveTab} />}\r\n        {activeTab === 'gallery' && <ChartGallerySection setActiveTab={setActiveTab} />}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppContent />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nfunction FileUploadSection({ setActiveTab }) {\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadResult, setUploadResult] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setDragActive(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (droppedFile && (droppedFile.name.endsWith('.xlsx') || droppedFile.name.endsWith('.xls'))) {\r\n      setFile(droppedFile);\r\n      setError('');\r\n    } else {\r\n      setError('Please select a valid Excel file (.xlsx or .xls)');\r\n    }\r\n  };\r\n\r\n  const handleFileInput = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n\r\n    setUploading(true);\r\n    setUploadProgress(0);\r\n    setError('');\r\n\r\n    try {\r\n      const result = await filesAPI.uploadFile(file, (progress) => {\r\n        setUploadProgress(progress);\r\n      });\r\n      \r\n      setUploadResult(result);\r\n      setFile(null);\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Upload failed. Please try again.');\r\n    } finally {\r\n      setUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2>Upload Excel File</h2>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {uploadResult && (\r\n        <div className=\"success-message\">\r\n          <h3>✅ Upload Successful!</h3>\r\n          <p>File: {uploadResult.file?.originalName}</p>\r\n          <p>Rows processed: {uploadResult.file?.rowCount || 'N/A'}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div \r\n        className={`upload-area ${dragActive ? 'drag-active' : ''} ${file ? 'file-selected' : ''} ${uploading ? 'uploading' : ''}`}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n      >\r\n        {!file && !uploading ? (\r\n          <>\r\n            <div className=\"upload-icon\">📊</div>\r\n            <p>Drag and drop your Excel file here</p>\r\n            <p>or</p>\r\n            <label className=\"file-input-label\">\r\n              Choose File\r\n              <input \r\n                type=\"file\" \r\n                accept=\".xlsx,.xls\" \r\n                onChange={handleFileInput}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </label>\r\n            <p className=\"file-info\">Supports .xlsx and .xls files (max 10MB)</p>\r\n          </>\r\n        ) : uploading ? (\r\n          <div className=\"upload-progress\">\r\n            <div className=\"progress-icon\">⬆️</div>\r\n            <h3>Uploading... {uploadProgress}%</h3>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${uploadProgress}%` }}\r\n              ></div>\r\n            </div>\r\n            <p>Please wait while we process your file</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"file-preview\">\r\n            <div className=\"file-icon\">📄</div>\r\n            <div className=\"file-details\">\r\n              <h3>{file.name}</h3>\r\n              <p>Size: {(file.size / 1024 / 1024).toFixed(2)} MB</p>\r\n              <div className=\"file-actions\">\r\n                <button \r\n                  className=\"btn btn-primary\" \r\n                  onClick={handleUpload}\r\n                  disabled={uploading}\r\n                >\r\n                  {uploading ? 'Processing...' : 'Upload & Process'}\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-secondary\" \r\n                  onClick={() => setFile(null)}\r\n                  disabled={uploading}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MyChartsSection() {\r\n  const [charts, setCharts] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [chartType, setChartType] = useState('bar');\r\n  const [chartTitle, setChartTitle] = useState('');\r\n  const [showCreateChart, setShowCreateChart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadChartsAndFiles();\r\n  }, []);\r\n\r\n  const loadChartsAndFiles = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [chartsData, filesData] = await Promise.all([\r\n        chartsAPI.getCharts(),\r\n        filesAPI.getFiles()\r\n      ]);\r\n      setCharts(chartsData);\r\n      setFiles(filesData);\r\n    } catch (error) {\r\n      console.error('Failed to load data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateChart = async () => {\r\n    if (!selectedFile || !chartTitle) return;\r\n\r\n    try {\r\n      const chartData = {\r\n        title: chartTitle,\r\n        type: chartType,\r\n        fileId: selectedFile._id,\r\n        config: {\r\n          // Chart configuration based on file data\r\n        }\r\n      };\r\n\r\n      const newChart = await chartsAPI.createChart(chartData);\r\n      setCharts([newChart, ...charts]);\r\n      setShowCreateChart(false);\r\n      setSelectedFile(null);\r\n      setChartTitle('');\r\n    } catch (error) {\r\n      console.error('Failed to create chart:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteChart = async (chartId) => {\r\n    if (window.confirm('Are you sure you want to delete this chart?')) {\r\n      try {\r\n        await chartsAPI.deleteChart(chartId);\r\n        setCharts(charts.filter(chart => chart._id !== chartId));\r\n      } catch (error) {\r\n        console.error('Failed to delete chart:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"loading-state\">Loading your charts...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"section-header\">\r\n        <h2>My Charts</h2>\r\n        <button \r\n          className=\"btn btn-primary\"\r\n          onClick={() => setShowCreateChart(true)}\r\n          disabled={files.length === 0}\r\n        >\r\n          Create New Chart\r\n        </button>\r\n      </div>\r\n\r\n      {showCreateChart && (\r\n        <div className=\"create-chart-form\">\r\n          <h3>Create New Chart</h3>\r\n          <div className=\"form-group\">\r\n            <label>Chart Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={chartTitle}\r\n              onChange={(e) => setChartTitle(e.target.value)}\r\n              placeholder=\"Enter chart title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Select File</label>\r\n            <select\r\n              value={selectedFile?._id || ''}\r\n              onChange={(e) => {\r\n                const file = files.find(f => f._id === e.target.value);\r\n                setSelectedFile(file);\r\n              }}\r\n            >\r\n              <option value=\"\">Choose a file...</option>\r\n              {files.map(file => (\r\n                <option key={file._id} value={file._id}>\r\n                  {file.originalName} ({file.rowCount} rows)\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Chart Type</label>\r\n            <select\r\n              value={chartType}\r\n              onChange={(e) => setChartType(e.target.value)}\r\n            >\r\n              <option value=\"bar\">Bar Chart</option>\r\n              <option value=\"line\">Line Chart</option>\r\n              <option value=\"pie\">Pie Chart</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-actions\">\r\n            <button className=\"btn btn-primary\" onClick={handleCreateChart}>\r\n              Create Chart\r\n            </button>\r\n            <button className=\"btn btn-secondary\" onClick={() => setShowCreateChart(false)}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"charts-grid\">\r\n        {charts.map(chart => (\r\n          <div key={chart._id} className=\"chart-card\">\r\n            <div className=\"chart-preview\">\r\n              <ChartRenderer\r\n                chartData={generateSampleChartData(chart.type)}\r\n                chartType={chart.type}\r\n                title={chart.title}\r\n                width={280}\r\n                height={200}\r\n              />\r\n            </div>\r\n            <div className=\"chart-info\">\r\n              <h3>{chart.title}</h3>\r\n              <p>{chart.type} Chart</p>\r\n              <p className=\"chart-date\">\r\n                Created: {new Date(chart.createdAt).toLocaleDateString()}\r\n              </p>\r\n              <div className=\"chart-actions\">\r\n                <button className=\"btn btn-small\">View</button>\r\n                <button className=\"btn btn-small\">Edit</button>\r\n                <button \r\n                  className=\"btn btn-small btn-danger\"\r\n                  onClick={() => handleDeleteChart(chart._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {charts.length === 0 && (\r\n          <div className=\"empty-state\">\r\n            <p>No charts created yet</p>\r\n            {files.length === 0 ? (\r\n              <p>Upload an Excel file first to get started</p>\r\n            ) : (\r\n              <p>Click \"Create New Chart\" to get started</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChartGallerySection({ setActiveTab }) {\r\n  const [selectedChart, setSelectedChart] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [showFileSelect, setShowFileSelect] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadFiles();\r\n  }, []);\r\n\r\n  const loadFiles = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const filesData = await filesAPI.getFiles();\r\n      setFiles(filesData);\r\n    } catch (error) {\r\n      console.error('Failed to load files:', error);\r\n      setError('Failed to load your files. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const chartTypes = [\r\n    { id: 'bar', type: 'Bar Chart', icon: '📊', description: 'Perfect for comparing categories' },\r\n    { id: 'line', type: 'Line Chart', icon: '📈', description: 'Great for showing trends over time' },\r\n    { id: 'pie', type: 'Pie Chart', icon: '🥧', description: 'Ideal for showing parts of a whole' },\r\n    { id: '3d-bar', type: '3D Bar Chart', icon: '📊', description: '3D visualization for impact' },\r\n    { id: 'scatter', type: 'Scatter Plot', icon: '⚫', description: 'Shows relationships between variables' },\r\n    { id: 'area', type: 'Area Chart', icon: '🏔️', description: 'Displays cumulative data' }\r\n  ];\r\n\r\n  const handleChartSelect = (chart) => {\r\n    setSelectedChart(chart);\r\n    if (files.length === 0) {\r\n      setError('Please upload an Excel file first to create charts.');\r\n    } else {\r\n      setShowFileSelect(true);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedFile(file);\r\n      \r\n      // Create a new chart with the selected type and file\r\n      const chartData = {\r\n        title: `New ${selectedChart.type}`,\r\n        type: selectedChart.id,\r\n        fileId: file._id,\r\n        config: {\r\n          // Default configuration based on chart type\r\n          type: selectedChart.id,\r\n          // Add more default config based on chart type\r\n        }\r\n      };\r\n\r\n      const newChart = await chartsAPI.createChart(chartData);\r\n      \r\n      // Redirect to My Charts section or show the new chart\r\n      setShowFileSelect(false);\r\n      setSelectedChart(null);\r\n      setActiveTab('charts'); // This assumes setActiveTab is passed as a prop\r\n    } catch (error) {\r\n      console.error('Failed to create chart:', error);\r\n      setError('Failed to create chart. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"loading-state\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2>Chart Gallery</h2>\r\n      <p>Choose from various chart types for your data visualization</p>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\" style={{ marginBottom: '20px' }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {showFileSelect ? (\r\n        <div className=\"file-selection\">\r\n          <h3>Select a File for Your {selectedChart?.type}</h3>\r\n          {files.length > 0 ? (\r\n            <div className=\"files-grid\">\r\n              {files.map(file => (\r\n                <div key={file._id} className=\"file-item\">\r\n                  <div className=\"file-icon\">📄</div>\r\n                  <h4>{file.originalName}</h4>\r\n                  <p>{file.rowCount} rows</p>\r\n                  <button \r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => handleFileSelect(file)}\r\n                  >\r\n                    Use This File\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"empty-state\">\r\n              <p>No files available. Please upload an Excel file first.</p>\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={() => setActiveTab('upload')}\r\n              >\r\n                Upload File\r\n              </button>\r\n            </div>\r\n          )}\r\n          <button \r\n            className=\"btn btn-secondary\"\r\n            onClick={() => {\r\n              setShowFileSelect(false);\r\n              setSelectedChart(null);\r\n            }}\r\n          >\r\n            Back to Chart Types\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"gallery-grid\">\r\n          {chartTypes.map((chart) => (\r\n            <div key={chart.id} className=\"gallery-item\">\r\n              <div className=\"gallery-icon\">{chart.icon}</div>\r\n              <h3>{chart.type}</h3>\r\n              <p>{chart.description}</p>\r\n              <button \r\n                className=\"btn btn-outline\"\r\n                onClick={() => handleChartSelect(chart)}\r\n              >\r\n                Try This Chart\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}