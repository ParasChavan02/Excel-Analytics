{"ast":null,"code":"import axios from 'axios';\n\n// Base API configuration\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // This is important for handling cookies/sessions\n});\n\n// Add request logging\napi.interceptors.request.use(config => {\n  console.log('Request:', {\n    method: config.method,\n    url: config.url,\n    data: config.data,\n    headers: config.headers\n  });\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response logging\napi.interceptors.response.use(response => {\n  console.log('Response:', {\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('Response Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\n\n// Add auth token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response3;\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    // Redirect to login could be handled here\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: async credentials => {\n    console.log('API: Sending login request...');\n    const response = await api.post('/auth/login', credentials);\n    const {\n      token,\n      user\n    } = response.data;\n    console.log('API: Login response:', {\n      token: !!token,\n      user\n    });\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    console.log('API: Stored auth data in localStorage');\n    return {\n      token,\n      user\n    };\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n      token,\n      user\n    };\n  },\n  logout: () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data.user;\n  }\n};\n\n// Files API calls\nexport const filesAPI = {\n  uploadFile: async (file, onProgress) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/files/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: progressEvent => {\n        const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        onProgress === null || onProgress === void 0 ? void 0 : onProgress(progress);\n      }\n    });\n    return response.data;\n  },\n  getFiles: async () => {\n    const response = await api.get('/files');\n    return response.data.files;\n  },\n  getFile: async fileId => {\n    const response = await api.get(`/files/${fileId}`);\n    return response.data.file;\n  },\n  deleteFile: async fileId => {\n    const response = await api.delete(`/files/${fileId}`);\n    return response.data;\n  },\n  parseFile: async fileId => {\n    const response = await api.post(`/files/${fileId}/parse`);\n    return response.data;\n  }\n};\n\n// Charts API calls\nexport const chartsAPI = {\n  createChart: async chartData => {\n    const response = await api.post('/charts', chartData);\n    return response.data.chart;\n  },\n  getCharts: async () => {\n    const response = await api.get('/charts');\n    return response.data.charts;\n  },\n  getChart: async chartId => {\n    const response = await api.get(`/charts/${chartId}`);\n    return response.data.chart;\n  },\n  updateChart: async (chartId, chartData) => {\n    const response = await api.put(`/charts/${chartId}`, chartData);\n    return response.data.chart;\n  },\n  deleteChart: async chartId => {\n    const response = await api.delete(`/charts/${chartId}`);\n    return response.data;\n  },\n  getPublicCharts: async () => {\n    const response = await api.get('/charts/public');\n    return response.data.charts;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","console","log","method","url","data","error","Promise","reject","response","status","_error$response","_error$response2","message","token","localStorage","getItem","Authorization","_error$response3","removeItem","authAPI","login","credentials","post","user","setItem","JSON","stringify","register","userData","logout","getCurrentUser","get","filesAPI","uploadFile","file","onProgress","formData","FormData","append","onUploadProgress","progressEvent","progress","Math","round","loaded","total","getFiles","files","getFile","fileId","deleteFile","delete","parseFile","chartsAPI","createChart","chartData","chart","getCharts","charts","getChart","chartId","updateChart","put","deleteChart","getPublicCharts"],"sources":["C:/Users/paras/OneDrive/Desktop/Excel-Sheet-Analyzer/Excel-Visualizer/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base API configuration\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // This is important for handling cookies/sessions\r\n});\r\n\r\n// Add request logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Request:', {\r\n      method: config.method,\r\n      url: config.url,\r\n      data: config.data,\r\n      headers: config.headers,\r\n    });\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response:', {\r\n      status: response.status,\r\n      data: response.data,\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message,\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add auth token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle response errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      // Redirect to login could be handled here\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    console.log('API: Sending login request...');\r\n    const response = await api.post('/auth/login', credentials);\r\n    const { token, user } = response.data;\r\n    console.log('API: Login response:', { token: !!token, user });\r\n    localStorage.setItem('authToken', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    console.log('API: Stored auth data in localStorage');\r\n    return { token, user };\r\n  },\r\n\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    const { token, user } = response.data;\r\n    localStorage.setItem('authToken', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return { token, user };\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser: async () => {\r\n    const response = await api.get('/auth/me');\r\n    return response.data.user;\r\n  }\r\n};\r\n\r\n// Files API calls\r\nexport const filesAPI = {\r\n  uploadFile: async (file, onProgress) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const response = await api.post('/files/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        onProgress?.(progress);\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getFiles: async () => {\r\n    const response = await api.get('/files');\r\n    return response.data.files;\r\n  },\r\n\r\n  getFile: async (fileId) => {\r\n    const response = await api.get(`/files/${fileId}`);\r\n    return response.data.file;\r\n  },\r\n\r\n  deleteFile: async (fileId) => {\r\n    const response = await api.delete(`/files/${fileId}`);\r\n    return response.data;\r\n  },\r\n\r\n  parseFile: async (fileId) => {\r\n    const response = await api.post(`/files/${fileId}/parse`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Charts API calls\r\nexport const chartsAPI = {\r\n  createChart: async (chartData) => {\r\n    const response = await api.post('/charts', chartData);\r\n    return response.data.chart;\r\n  },\r\n\r\n  getCharts: async () => {\r\n    const response = await api.get('/charts');\r\n    return response.data.charts;\r\n  },\r\n\r\n  getChart: async (chartId) => {\r\n    const response = await api.get(`/charts/${chartId}`);\r\n    return response.data.chart;\r\n  },\r\n\r\n  updateChart: async (chartId, chartData) => {\r\n    const response = await api.put(`/charts/${chartId}`, chartData);\r\n    return response.data.chart;\r\n  },\r\n\r\n  deleteChart: async (chartId) => {\r\n    const response = await api.delete(`/charts/${chartId}`);\r\n    return response.data;\r\n  },\r\n\r\n  getPublicCharts: async () => {\r\n    const response = await api.get('/charts/public');\r\n    return response.data.charts;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}