{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paras\\\\OneDrive\\\\Desktop\\\\Excel-Sheet-Analyzer\\\\Excel-Visualizer\\\\frontend\\\\src\\\\components\\\\Charts\\\\ChartRenderer.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, ArcElement, Title, Tooltip, Legend);\nconst ChartRenderer = ({\n  chartData,\n  chartType,\n  title,\n  width = 400,\n  height = 300\n}) => {\n  var _chartData$datasets;\n  // Default options for all chart types\n  const defaultOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: title || 'Chart Title',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      }\n    }\n  };\n\n  // Specific options for different chart types\n  const barOptions = {\n    ...defaultOptions,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  const lineOptions = {\n    ...defaultOptions,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    },\n    elements: {\n      line: {\n        tension: 0.4 // Curved lines\n      }\n    }\n  };\n  const pieOptions = {\n    ...defaultOptions,\n    scales: undefined // Pie charts don't need scales\n  };\n\n  // Generate colors for datasets\n  const generateColors = count => {\n    const colors = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF', '#4BC0C0', '#FF6384'];\n    return colors.slice(0, count);\n  };\n\n  // Process chart data\n  const processedData = {\n    labels: chartData.labels || [],\n    datasets: ((_chartData$datasets = chartData.datasets) === null || _chartData$datasets === void 0 ? void 0 : _chartData$datasets.map((dataset, index) => {\n      var _chartData$labels, _chartData$labels2;\n      return {\n        ...dataset,\n        backgroundColor: dataset.backgroundColor || generateColors(((_chartData$labels = chartData.labels) === null || _chartData$labels === void 0 ? void 0 : _chartData$labels.length) || 1),\n        borderColor: dataset.borderColor || generateColors(((_chartData$labels2 = chartData.labels) === null || _chartData$labels2 === void 0 ? void 0 : _chartData$labels2.length) || 1),\n        borderWidth: dataset.borderWidth || (chartType === 'pie' ? 0 : 2)\n      };\n    })) || []\n  };\n  const renderChart = () => {\n    switch (chartType.toLowerCase()) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(Bar, {\n          data: processedData,\n          options: barOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(Line, {\n          data: processedData,\n          options: lineOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(Pie, {\n          data: processedData,\n          options: pieOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Bar, {\n          data: processedData,\n          options: barOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height\n    },\n    children: renderChart()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n// Sample chart data generator\n_c = ChartRenderer;\nexport const generateSampleChartData = (type, dataArray) => {\n  if (!dataArray || dataArray.length === 0) {\n    // Default sample data\n    return {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n      datasets: [{\n        label: 'Sample Data',\n        data: [12, 19, 3, 5, 2, 3]\n      }]\n    };\n  }\n\n  // Process real data from Excel\n  const labels = dataArray.map(item => item.label || item.name || item.category);\n  const values = dataArray.map(item => item.value || item.amount || item.count);\n  return {\n    labels,\n    datasets: [{\n      label: 'Data',\n      data: values\n    }]\n  };\n};\nexport default ChartRenderer;\nvar _c;\n$RefreshReg$(_c, \"ChartRenderer\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","ArcElement","Bar","Line","Pie","jsxDEV","_jsxDEV","register","ChartRenderer","chartData","chartType","title","width","height","_chartData$datasets","defaultOptions","responsive","maintainAspectRatio","plugins","legend","position","display","text","font","size","weight","barOptions","scales","y","beginAtZero","lineOptions","elements","line","tension","pieOptions","undefined","generateColors","count","colors","slice","processedData","labels","datasets","map","dataset","index","_chartData$labels","_chartData$labels2","backgroundColor","length","borderColor","borderWidth","renderChart","toLowerCase","data","options","fileName","_jsxFileName","lineNumber","columnNumber","style","children","_c","generateSampleChartData","type","dataArray","label","item","name","category","values","value","amount","$RefreshReg$"],"sources":["C:/Users/paras/OneDrive/Desktop/Excel-Sheet-Analyzer/Excel-Visualizer/frontend/src/components/Charts/ChartRenderer.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n} from 'chart.js';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst ChartRenderer = ({ chartData, chartType, title, width = 400, height = 300 }) => {\r\n  // Default options for all chart types\r\n  const defaultOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title || 'Chart Title',\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  // Specific options for different chart types\r\n  const barOptions = {\r\n    ...defaultOptions,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const lineOptions = {\r\n    ...defaultOptions,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    elements: {\r\n      line: {\r\n        tension: 0.4, // Curved lines\r\n      },\r\n    },\r\n  };\r\n\r\n  const pieOptions = {\r\n    ...defaultOptions,\r\n    scales: undefined, // Pie charts don't need scales\r\n  };\r\n\r\n  // Generate colors for datasets\r\n  const generateColors = (count) => {\r\n    const colors = [\r\n      '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',\r\n      '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF',\r\n      '#4BC0C0', '#FF6384'\r\n    ];\r\n    return colors.slice(0, count);\r\n  };\r\n\r\n  // Process chart data\r\n  const processedData = {\r\n    labels: chartData.labels || [],\r\n    datasets: chartData.datasets?.map((dataset, index) => ({\r\n      ...dataset,\r\n      backgroundColor: dataset.backgroundColor || generateColors(chartData.labels?.length || 1),\r\n      borderColor: dataset.borderColor || generateColors(chartData.labels?.length || 1),\r\n      borderWidth: dataset.borderWidth || (chartType === 'pie' ? 0 : 2),\r\n    })) || []\r\n  };\r\n\r\n  const renderChart = () => {\r\n    switch (chartType.toLowerCase()) {\r\n      case 'bar':\r\n        return <Bar data={processedData} options={barOptions} />;\r\n      case 'line':\r\n        return <Line data={processedData} options={lineOptions} />;\r\n      case 'pie':\r\n        return <Pie data={processedData} options={pieOptions} />;\r\n      default:\r\n        return <Bar data={processedData} options={barOptions} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      {renderChart()}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Sample chart data generator\r\nexport const generateSampleChartData = (type, dataArray) => {\r\n  if (!dataArray || dataArray.length === 0) {\r\n    // Default sample data\r\n    return {\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n      datasets: [{\r\n        label: 'Sample Data',\r\n        data: [12, 19, 3, 5, 2, 3],\r\n      }]\r\n    };\r\n  }\r\n\r\n  // Process real data from Excel\r\n  const labels = dataArray.map(item => item.label || item.name || item.category);\r\n  const values = dataArray.map(item => item.value || item.amount || item.count);\r\n\r\n  return {\r\n    labels,\r\n    datasets: [{\r\n      label: 'Data',\r\n      data: values,\r\n    }]\r\n  };\r\n};\r\n\r\nexport default ChartRenderer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACL,UAAU;AACjB,SAASC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAd,OAAO,CAACe,QAAQ,CACdd,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZI,UAAU,EACVH,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMQ,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC,KAAK;EAAEC,KAAK,GAAG,GAAG;EAAEC,MAAM,GAAG;AAAI,CAAC,KAAK;EAAA,IAAAC,mBAAA;EACpF;EACA,MAAMC,cAAc,GAAG;IACrBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDT,KAAK,EAAE;QACLU,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEX,KAAK,IAAI,aAAa;QAC5BY,IAAI,EAAE;UACJC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACV;MACF;IACF;EACF,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG;IACjB,GAAGX,cAAc;IACjBY,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,MAAMC,WAAW,GAAG;IAClB,GAAGf,cAAc;IACjBY,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF,CAAC;IACDE,QAAQ,EAAE;MACRC,IAAI,EAAE;QACJC,OAAO,EAAE,GAAG,CAAE;MAChB;IACF;EACF,CAAC;EAED,MAAMC,UAAU,GAAG;IACjB,GAAGnB,cAAc;IACjBY,MAAM,EAAEQ,SAAS,CAAE;EACrB,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,MAAM,GAAG,CACb,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,CACrB;IACD,OAAOA,MAAM,CAACC,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMG,aAAa,GAAG;IACpBC,MAAM,EAAEhC,SAAS,CAACgC,MAAM,IAAI,EAAE;IAC9BC,QAAQ,EAAE,EAAA5B,mBAAA,GAAAL,SAAS,CAACiC,QAAQ,cAAA5B,mBAAA,uBAAlBA,mBAAA,CAAoB6B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK;MAAA,IAAAC,iBAAA,EAAAC,kBAAA;MAAA,OAAM;QACrD,GAAGH,OAAO;QACVI,eAAe,EAAEJ,OAAO,CAACI,eAAe,IAAIZ,cAAc,CAAC,EAAAU,iBAAA,GAAArC,SAAS,CAACgC,MAAM,cAAAK,iBAAA,uBAAhBA,iBAAA,CAAkBG,MAAM,KAAI,CAAC,CAAC;QACzFC,WAAW,EAAEN,OAAO,CAACM,WAAW,IAAId,cAAc,CAAC,EAAAW,kBAAA,GAAAtC,SAAS,CAACgC,MAAM,cAAAM,kBAAA,uBAAhBA,kBAAA,CAAkBE,MAAM,KAAI,CAAC,CAAC;QACjFE,WAAW,EAAEP,OAAO,CAACO,WAAW,KAAKzC,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;MAClE,CAAC;IAAA,CAAC,CAAC,KAAI;EACT,CAAC;EAED,MAAM0C,WAAW,GAAGA,CAAA,KAAM;IACxB,QAAQ1C,SAAS,CAAC2C,WAAW,CAAC,CAAC;MAC7B,KAAK,KAAK;QACR,oBAAO/C,OAAA,CAACJ,GAAG;UAACoD,IAAI,EAAEd,aAAc;UAACe,OAAO,EAAE7B;QAAW;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1D,KAAK,MAAM;QACT,oBAAOrD,OAAA,CAACH,IAAI;UAACmD,IAAI,EAAEd,aAAc;UAACe,OAAO,EAAEzB;QAAY;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5D,KAAK,KAAK;QACR,oBAAOrD,OAAA,CAACF,GAAG;UAACkD,IAAI,EAAEd,aAAc;UAACe,OAAO,EAAErB;QAAW;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1D;QACE,oBAAOrD,OAAA,CAACJ,GAAG;UAACoD,IAAI,EAAEd,aAAc;UAACe,OAAO,EAAE7B;QAAW;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC5D;EACF,CAAC;EAED,oBACErD,OAAA;IAAKsD,KAAK,EAAE;MAAEhD,KAAK;MAAEC;IAAO,CAAE;IAAAgD,QAAA,EAC3BT,WAAW,CAAC;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;;AAED;AAAAG,EAAA,GA1FMtD,aAAa;AA2FnB,OAAO,MAAMuD,uBAAuB,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;EAC1D,IAAI,CAACA,SAAS,IAAIA,SAAS,CAAChB,MAAM,KAAK,CAAC,EAAE;IACxC;IACA,OAAO;MACLR,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAClDC,QAAQ,EAAE,CAAC;QACTwB,KAAK,EAAE,aAAa;QACpBZ,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAC3B,CAAC;IACH,CAAC;EACH;;EAEA;EACA,MAAMb,MAAM,GAAGwB,SAAS,CAACtB,GAAG,CAACwB,IAAI,IAAIA,IAAI,CAACD,KAAK,IAAIC,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,QAAQ,CAAC;EAC9E,MAAMC,MAAM,GAAGL,SAAS,CAACtB,GAAG,CAACwB,IAAI,IAAIA,IAAI,CAACI,KAAK,IAAIJ,IAAI,CAACK,MAAM,IAAIL,IAAI,CAAC9B,KAAK,CAAC;EAE7E,OAAO;IACLI,MAAM;IACNC,QAAQ,EAAE,CAAC;MACTwB,KAAK,EAAE,MAAM;MACbZ,IAAI,EAAEgB;IACR,CAAC;EACH,CAAC;AACH,CAAC;AAED,eAAe9D,aAAa;AAAC,IAAAsD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}